/*
Задача №1:

Напишите программу, которая принимает на вход пятизначное число и проверяет, является ли оно палиндромом.

    14212 -> нет
    12821 -> да
    23432 -> да
*/
//Будет много заметок... больше чем кода. D:
int ImputNumber()
{
    bool trueNumber;
    int fiveNumber;
    int maxLengthNumber = 5; //Что бы не было непонятных магических чисел.
    int minLengthNumber = 4; //И что бы было легче корректировать диапазон.
    //Цикл, что бы обязать пользователя ввести корректное зщначение.
    //А так же проверка коректности этого значения. Ручной выход не предусмотрен. 
    //Да, можно было бы и без этого, двумя строчками. Но нельзя.
    do
    {
        Console.Write("Введите пятизначное число: ");
        trueNumber = int.TryParse(Console.ReadLine(), out fiveNumber); //пробразование строки в число, и получение успех/нет в переменной.
        int lengthNumber = Math.Abs(fiveNumber).ToString().Length; //тут твориться сложная фигня, позволяющая посчитать длину числа.
        if (trueNumber == false) Console.WriteLine("Введены не корректные символы."); //проверка на успех преобразования строки в число.
        else if (Math.Abs(lengthNumber) > maxLengthNumber) // проверка не превышен ли макимум заданного размера числа.
        {
            Console.WriteLine("Ведено число из шести и более символов.");
            trueNumber = false;
        }
        else if (Math.Abs(lengthNumber) < minLengthNumber) // проверка не превышен ли минимум заданного размера числа.
        {
            Console.WriteLine("Ведено число из четырёх или менее символов");
            trueNumber = false;
        }
    }
    while (trueNumber == false);
    return fiveNumber; //возвращаем результат работы метода, ввиде числа.
}

void CheckNumberOnSpecularity(int numberFive)
{
    //Вот тут по интересней.
    //Мы двумя вложенными циклами выискиваем первое и последнее число на первой итерации.
    //А на второй, уже вторе и предпоследнее. Параллельно всё сравнивается.
    bool tru = false; //поднимаем флаг.
    int numOne = 0;
    int numTwo = 0;
    int indexOneNum = (Math.Abs(numberFive).ToString().Length) - 1; //число содержит 5 значений. 4 мы откидываем, что бы заполучить одно, первое. Т.е. Мы счиатем все числа кроме одного. -1.
    int imdexPastNum = (Math.Abs(numberFive).ToString().Length) / 2; //чиисло итераций первого/врехнего цикла.
    //Так как нам фактически надо сверить только по две цифры с права и слева от середины, то итераций всего две. 
    //Что бы получить это значение, делим длину на 2. Так как int, то будет целое число в меньшуцю сторону. Что и нужно.
    int workNumber = numberFive; //Просто рабочая переменна. Что бы сохранить изначальное число в numberFive.

    for (int i = 0; i < imdexPastNum; i++) //верхний цил. Дважды откусывает последнее число.
    {
        numTwo = workNumber; //сохраняем число в переменную для работы с ним во втором цикле.
        numOne = workNumber % 10; //сначало получаем самую последнию цифру.
        workNumber = workNumber / 10;  //режем число, откидывая полученную цифру, что бы можно было получить следующую.

        for (int j = 0; j < indexOneNum; j++) // нижний цикл. Получает первое число.
        {
            numTwo = numTwo / 10; //отбросив 4 последних цифры мы получаем самую первую.
        }
        indexOneNum = indexOneNum - 2; //Сокращаем колличесво возможных тиераций, 
        //что бы остановиться в слудующий раз на преподследней цифре.Тогда у нас их будет две.
        numTwo = numTwo % 10;//получаем последнюю цифру. При первой итерации бессмысленно, 
        //но при второй, когда у нас будет уже две первые цифры, а нам нужна будет только вторая, это будет иметь смысл.
        if (numOne == numTwo) //проверяем равныли две крайние цифры. Если да, то меняем флаг на тру и проверяем следующую пару.
        {
            tru = true;
        }
        else //если нет, то завершаем цикл, пишем что нет, и ставим флаг фолс(на случай, если первая пара тру).
        {
            tru = false;
            Console.WriteLine($"Число {numberFive} => не палиндромно.");
            break;
        }
    }
    if (tru == true) Console.WriteLine($"Число {numberFive} => палиндромно."); //если цикл завершился с тру, то выводим это сообщение.
}
int userNumber = ImputNumber();
CheckNumberOnSpecularity(userNumber);
//Через массив было бы по проще. Но я ни о чём не сожалею. Получилось занятно. 